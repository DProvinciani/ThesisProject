/********************************************************************************
** Form generated from reading UI file 'PtExploitDetectorGUI.ui'
**
** Created by: Qt User Interface Compiler version 5.10.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_PTEXPLOITDETECTORGUI_H
#define UI_PTEXPLOITDETECTORGUI_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QPlainTextEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_PtExploitDetectorGUIClass
{
public:
    QWidget *centralWidget;
    QLabel *labelTitle;
    QLineEdit *filePathPanel;
    QPushButton *buttonOpen;
    QPushButton *buttonAnalyze;
    QPushButton *buttonDump;
    QPlainTextEdit *exploitDataPanel;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *PtExploitDetectorGUIClass)
    {
        if (PtExploitDetectorGUIClass->objectName().isEmpty())
            PtExploitDetectorGUIClass->setObjectName(QStringLiteral("PtExploitDetectorGUIClass"));
        PtExploitDetectorGUIClass->resize(300, 685);
        QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(PtExploitDetectorGUIClass->sizePolicy().hasHeightForWidth());
        PtExploitDetectorGUIClass->setSizePolicy(sizePolicy);
        PtExploitDetectorGUIClass->setMinimumSize(QSize(300, 685));
        PtExploitDetectorGUIClass->setMaximumSize(QSize(300, 685));
        QIcon icon;
        icon.addFile(QStringLiteral("../PtExploitDetector/res/icon.ico"), QSize(), QIcon::Normal, QIcon::Off);
        PtExploitDetectorGUIClass->setWindowIcon(icon);
        PtExploitDetectorGUIClass->setIconSize(QSize(30, 30));
        PtExploitDetectorGUIClass->setToolButtonStyle(Qt::ToolButtonIconOnly);
        PtExploitDetectorGUIClass->setAnimated(true);
        PtExploitDetectorGUIClass->setDocumentMode(false);
        centralWidget = new QWidget(PtExploitDetectorGUIClass);
        centralWidget->setObjectName(QStringLiteral("centralWidget"));
        centralWidget->setMinimumSize(QSize(300, 660));
        centralWidget->setMaximumSize(QSize(300, 660));
        labelTitle = new QLabel(centralWidget);
        labelTitle->setObjectName(QStringLiteral("labelTitle"));
        labelTitle->setGeometry(QRect(0, 0, 300, 80));
        QFont font;
        font.setFamily(QStringLiteral("Open Sans"));
        font.setPointSize(16);
        labelTitle->setFont(font);
        labelTitle->setStyleSheet(QLatin1String("QLabel {\n"
"	font: 16pt \"Open Sans\";\n"
"	qproperty-alignment: 'AlignVCenter | AlignHCenter';\n"
"	color: #bdc3c7;\n"
"	background-color : #34495e;\n"
"}"));
        labelTitle->setAlignment(Qt::AlignCenter);
        filePathPanel = new QLineEdit(centralWidget);
        filePathPanel->setObjectName(QStringLiteral("filePathPanel"));
        filePathPanel->setGeometry(QRect(0, 130, 300, 30));
        filePathPanel->setStyleSheet(QLatin1String("QLineEdit {\n"
"	font: 10pt \"Consolas\";\n"
"	qproperty-alignment: 'AlignTop | AlignLeft';\n"
"	border: 1px solid black;\n"
"	color: black;\n"
"	background-color: white;\n"
"}"));
        filePathPanel->setReadOnly(false);
        buttonOpen = new QPushButton(centralWidget);
        buttonOpen->setObjectName(QStringLiteral("buttonOpen"));
        buttonOpen->setEnabled(true);
        buttonOpen->setGeometry(QRect(0, 80, 100, 50));
        buttonOpen->setStyleSheet(QLatin1String("QPushButton {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #2c3e50;\n"
"}\n"
"QPushButton:pressed {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #34495e;\n"
"}"));
        buttonOpen->setFlat(false);
        buttonAnalyze = new QPushButton(centralWidget);
        buttonAnalyze->setObjectName(QStringLiteral("buttonAnalyze"));
        buttonAnalyze->setGeometry(QRect(100, 80, 100, 50));
        buttonAnalyze->setStyleSheet(QLatin1String("QPushButton {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #2c3e50;\n"
"}\n"
"QPushButton:pressed {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #34495e;\n"
"}"));
        buttonAnalyze->setFlat(false);
        buttonDump = new QPushButton(centralWidget);
        buttonDump->setObjectName(QStringLiteral("buttonDump"));
        buttonDump->setGeometry(QRect(200, 80, 100, 50));
        buttonDump->setStyleSheet(QLatin1String("QPushButton {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #2c3e50;\n"
"}\n"
"QPushButton:pressed {\n"
"	font: 8pt \"Open Sans\";\n"
"	border: 0px;\n"
"	color: #bdc3c7;\n"
"	background-color: #34495e;\n"
"}"));
        buttonDump->setAutoDefault(false);
        buttonDump->setFlat(false);
        exploitDataPanel = new QPlainTextEdit(centralWidget);
        exploitDataPanel->setObjectName(QStringLiteral("exploitDataPanel"));
        exploitDataPanel->setGeometry(QRect(0, 160, 300, 500));
        QSizePolicy sizePolicy1(QSizePolicy::Fixed, QSizePolicy::Expanding);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(exploitDataPanel->sizePolicy().hasHeightForWidth());
        exploitDataPanel->setSizePolicy(sizePolicy1);
        exploitDataPanel->setMinimumSize(QSize(300, 500));
        exploitDataPanel->setMaximumSize(QSize(300, 16777215));
        exploitDataPanel->setStyleSheet(QLatin1String("QPlainTextEdit {\n"
"	font: 10pt \"Consolas\";\n"
"	qproperty-alignment: 'AlignTop | AlignLeft';\n"
"	border: 1px solid black;\n"
"	color: black;\n"
"	background-color: white;\n"
"}"));
        exploitDataPanel->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
        exploitDataPanel->setUndoRedoEnabled(false);
        exploitDataPanel->setReadOnly(true);
        PtExploitDetectorGUIClass->setCentralWidget(centralWidget);
        exploitDataPanel->raise();
        labelTitle->raise();
        filePathPanel->raise();
        buttonOpen->raise();
        buttonAnalyze->raise();
        buttonDump->raise();
        statusBar = new QStatusBar(PtExploitDetectorGUIClass);
        statusBar->setObjectName(QStringLiteral("statusBar"));
        PtExploitDetectorGUIClass->setStatusBar(statusBar);

        retranslateUi(PtExploitDetectorGUIClass);

        buttonDump->setDefault(false);


        QMetaObject::connectSlotsByName(PtExploitDetectorGUIClass);
    } // setupUi

    void retranslateUi(QMainWindow *PtExploitDetectorGUIClass)
    {
        PtExploitDetectorGUIClass->setWindowTitle(QApplication::translate("PtExploitDetectorGUIClass", "PtExploitDetector", nullptr));
        labelTitle->setText(QApplication::translate("PtExploitDetectorGUIClass", "PTEXPLOITDETECTOR", nullptr));
        buttonOpen->setText(QApplication::translate("PtExploitDetectorGUIClass", "OPEN", nullptr));
        buttonAnalyze->setText(QApplication::translate("PtExploitDetectorGUIClass", "ANALYZE", nullptr));
        buttonDump->setText(QApplication::translate("PtExploitDetectorGUIClass", "DUMP", nullptr));
    } // retranslateUi

};

namespace Ui {
    class PtExploitDetectorGUIClass: public Ui_PtExploitDetectorGUIClass {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_PTEXPLOITDETECTORGUI_H
