/**********************************************************************
 *  Windows Intel Processor Trace Exploit Detector
 *  Filename: stdafx.h
 *  Implement Exploit Detector's standard definitios
 *  Last revision: 09/06/2018
 *
 *  Copyright© 2018 Diego Provinciani
 *  UNC - Facultad de Ciencias Exactas Fisicas y Naturales
 *  All right reserved
 **********************************************************************/
#pragma once

#include "targetver.h"
#include "resource.h"
#include <stdio.h>
#include <tchar.h>
#include <iostream>
#include <string>
#include <vector>

#define WIN32_LEAN_AND_MEAN
#include <Windows.h>
#include "shellapi.h"
#include "Winuser.h"

typedef unsigned long long QWORD;

class CmdArgsParser {
public:
    CmdArgsParser(int argc, wchar_t *argv[], int startSwitch = 1);
    const std::wstring& GetOptionValue(const std::wstring &cmdOption) const;
    bool HasOption(const std::wstring &cmdOption) const;

private:
    std::vector <std::wstring> cmdTokens;
};

// Check if a file is an executable
bool IsExecutable(const std::wstring &fileName);

// Xtrace logging
void Xtrace(LPCTSTR lpszFormat, ...);

#ifdef _DEBUG
#define DbgBreak() __debugbreak()
#else
#define DbgBreak() __noop()
#endif

#define COUNTOF(x) sizeof(x) / sizeof(x[0])